{\rtf1\ansi\ansicpg1250\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf0 \expnd0\expndtw0\kerning0
Goal of this thesis is to create a middleware solution for distributed event pattern matching.  The base of the thesis is Complex Event Processing. Solution could be installed to any number of nodes. Every node could play as an event stream producer and also as an event stream consumer. There are two types of events. Every node can also handle event pattern matching using the deployed pattern. Patterns are deployed for a specified time interval. Successful pattern detection will cause a proper reaction. Reaction depends on the type of events. The first reaction is starting an action of event pattern matching at specific subset of nodes. The second possible reaction is log the information about event detection. The final solution will be tested on four nodes.}